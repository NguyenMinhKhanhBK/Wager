// Code generated by MockGen. DO NOT EDIT.
// Source: utils/http_utils.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHTTPUtils is a mock of HTTPUtils interface.
type MockHTTPUtils struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPUtilsMockRecorder
}

// MockHTTPUtilsMockRecorder is the mock recorder for MockHTTPUtils.
type MockHTTPUtilsMockRecorder struct {
	mock *MockHTTPUtils
}

// NewMockHTTPUtils creates a new mock instance.
func NewMockHTTPUtils(ctrl *gomock.Controller) *MockHTTPUtils {
	mock := &MockHTTPUtils{ctrl: ctrl}
	mock.recorder = &MockHTTPUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPUtils) EXPECT() *MockHTTPUtilsMockRecorder {
	return m.recorder
}

// ReplyJSON mocks base method.
func (m *MockHTTPUtils) ReplyJSON(w http.ResponseWriter, data interface{}, code int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReplyJSON", w, data, code)
}

// ReplyJSON indicates an expected call of ReplyJSON.
func (mr *MockHTTPUtilsMockRecorder) ReplyJSON(w, data, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReplyJSON", reflect.TypeOf((*MockHTTPUtils)(nil).ReplyJSON), w, data, code)
}
