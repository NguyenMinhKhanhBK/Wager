// Code generated by MockGen. DO NOT EDIT.
// Source: service/wager_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "wager/model"

	gomock "github.com/golang/mock/gomock"
)

// MockWagerService is a mock of WagerService interface.
type MockWagerService struct {
	ctrl     *gomock.Controller
	recorder *MockWagerServiceMockRecorder
}

// MockWagerServiceMockRecorder is the mock recorder for MockWagerService.
type MockWagerServiceMockRecorder struct {
	mock *MockWagerService
}

// NewMockWagerService creates a new mock instance.
func NewMockWagerService(ctrl *gomock.Controller) *MockWagerService {
	mock := &MockWagerService{ctrl: ctrl}
	mock.recorder = &MockWagerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWagerService) EXPECT() *MockWagerServiceMockRecorder {
	return m.recorder
}

// BuyWager mocks base method.
func (m *MockWagerService) BuyWager(request model.BuyWagerRequest) (*model.Purchase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuyWager", request)
	ret0, _ := ret[0].(*model.Purchase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuyWager indicates an expected call of BuyWager.
func (mr *MockWagerServiceMockRecorder) BuyWager(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuyWager", reflect.TypeOf((*MockWagerService)(nil).BuyWager), request)
}

// CreateWager mocks base method.
func (m *MockWagerService) CreateWager(request model.CreateWagerRequest) (*model.Wager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWager", request)
	ret0, _ := ret[0].(*model.Wager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWager indicates an expected call of CreateWager.
func (mr *MockWagerServiceMockRecorder) CreateWager(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWager", reflect.TypeOf((*MockWagerService)(nil).CreateWager), request)
}

// GetWagerList mocks base method.
func (m *MockWagerService) GetWagerList(request model.GetWagerListRequest) (*model.GetWagerListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWagerList", request)
	ret0, _ := ret[0].(*model.GetWagerListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWagerList indicates an expected call of GetWagerList.
func (mr *MockWagerServiceMockRecorder) GetWagerList(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWagerList", reflect.TypeOf((*MockWagerService)(nil).GetWagerList), request)
}
